name: CI/CD to Azure Container App

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker login to ACR
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login acrltin.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build and Push Docker image
        run: |
          docker build -t acrltin.azurecr.io/lokaltalentin:latest .
          docker push acrltin.azurecr.io/lokaltalentin:latest

      - name: Generate Azure env var string
        id: buildenv
        env:
          NODE_ENV: production
          CACHE_CANDIDATES_ENABLED: ${{ secrets.CACHE_CANDIDATES_ENABLED }}
          CACHE_CANDIDATES_MIN_RECORDS: ${{ secrets.CACHE_CANDIDATES_MIN_RECORDS }}
          CACHE_CANDIDATES_TTL: ${{ secrets.CACHE_CANDIDATES_TTL }}
          CACHE_EMPLOYERS_ENABLED: ${{ secrets.CACHE_EMPLOYERS_ENABLED }}
          CACHE_EMPLOYERS_MIN_RECORDS: ${{ secrets.CACHE_EMPLOYERS_MIN_RECORDS }}
          CACHE_EMPLOYERS_TTL: ${{ secrets.CACHE_EMPLOYERS_TTL }}
          CACHE_ENABLED: ${{ secrets.CACHE_ENABLED }}
          CACHE_JOBS_ENABLED: ${{ secrets.CACHE_JOBS_ENABLED }}
          CACHE_JOBS_MIN_RECORDS: ${{ secrets.CACHE_JOBS_MIN_RECORDS }}
          CACHE_JOBS_TTL: ${{ secrets.CACHE_JOBS_TTL }}
          CACHE_MIN_RECORDS: ${{ secrets.CACHE_MIN_RECORDS }}
          CACHE_TTL: ${{ secrets.CACHE_TTL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
        run: |
          KEYS="NODE_ENV CACHE_CANDIDATES_ENABLED CACHE_CANDIDATES_MIN_RECORDS CACHE_CANDIDATES_TTL \
          CACHE_EMPLOYERS_ENABLED CACHE_EMPLOYERS_MIN_RECORDS CACHE_EMPLOYERS_TTL CACHE_ENABLED \
          CACHE_JOBS_ENABLED CACHE_JOBS_MIN_RECORDS CACHE_JOBS_TTL CACHE_MIN_RECORDS CACHE_TTL \
          DATABASE_URL FIREBASE_CLIENT_EMAIL FIREBASE_PRIVATE_KEY GOOGLE_API_KEY \
          VITE_FIREBASE_API_KEY VITE_FIREBASE_APP_ID VITE_FIREBASE_AUTH_DOMAIN \
          VITE_FIREBASE_MESSAGING_SENDER_ID VITE_FIREBASE_PROJECT_ID VITE_FIREBASE_STORAGE_BUCKET \
          REDIS_HOST REDIS_PASSWORD REDIS_PORT SESSION_SECRET"
          
          ENV_STRING=""
          for KEY in $KEYS; do
            VAL="${!KEY}"
            ENV_STRING="$ENV_STRING --set-env-vars $KEY=$VAL"
          done

          echo "ENV_STRING=$ENV_STRING" >> $GITHUB_OUTPUT

      - name: Create or Update Azure Container App
        run: |
          if az containerapp show --name sbxlokaltalentin --resource-group rg-sbx-ltin &> /dev/null; then
            echo "🔁 Updating existing container app..."
            az containerapp update \
              --name sbxlokaltalentin \
              --resource-group rg-sbx-ltin \
              --image acrltin.azurecr.io/lokaltalentin:latest \
              ${{ steps.buildenv.outputs.ENV_STRING }}
          else
            echo "🚀 Creating new container app..."
            az containerapp create \
              --name sbxlokaltalentin \
              --resource-group rg-sbx-ltin \
              --environment sbx \
              --image acrltin.azurecr.io/lokaltalentin:latest \
              --target-port 5000 \
              --ingress external \
              --registry-server acrltin.azurecr.io \
              --registry-username ${{ secrets.ACR_USERNAME }} \
              --registry-password ${{ secrets.ACR_PASSWORD }} \
              ${{ steps.buildenv.outputs.ENV_STRING }}
          fi
