name: CI/CD to Azure Container App with Key Vault

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_KEYVAULT_NAME: kv-lokaltalentin
      AZURE_CONTAINERAPP_NAME: sbxlokaltalentin
      AZURE_RG: rg-sbx-ltin
      AZURE_ENV: sbx
      ACR_SERVER: acrltin.azurecr.io
      ACR_IMAGE: acrltin.azurecr.io/lokaltalentin:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker login to ACR
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ env.ACR_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build and Push Docker image
        run: |
          docker build -t $ACR_IMAGE .
          docker push $ACR_IMAGE

      - name: Ensure Azure Key Vault exists
        run: |
          az keyvault show --name $AZURE_KEYVAULT_NAME --resource-group $AZURE_RG || \
          az keyvault create --name $AZURE_KEYVAULT_NAME --resource-group $AZURE_RG --location eastus

      - name: Upload all GitHub secrets to Azure Key Vault
        run: |
          for secret in $(env | grep '^\(CACHE_\|DATABASE_URL\|FIREBASE_\|GOOGLE_API_KEY\|REDIS_\|SESSION_SECRET\|VITE_FIREBASE_\)' | cut -d= -f1); do
            az keyvault secret set \
              --vault-name $AZURE_KEYVAULT_NAME \
              --name "$secret" \
              --value "${{ secrets[secret] }}"
          done

      - name: Create or Update Azure Container App
        run: |
          EXISTS=$(az containerapp show --name $AZURE_CONTAINERAPP_NAME --resource-group $AZURE_RG --query "name" -o tsv || echo "")
          
          SECRET_KEYS=$(az keyvault secret list --vault-name $AZURE_KEYVAULT_NAME --query "[].name" -o tsv)
          SET_SECRETS=""
          SET_ENVVARS=""
          for key in $SECRET_KEYS; do
            SET_SECRETS+="$key=kvref:$AZURE_KEYVAULT_NAME:$key "
            SET_ENVVARS+="$key=secretref:$key "
          done

          if [ -z "$EXISTS" ]; then
            echo "Creating new container app..."
            az containerapp create \
              --name $AZURE_CONTAINERAPP_NAME \
              --resource-group $AZURE_RG \
              --environment $AZURE_ENV \
              --image $ACR_IMAGE \
              --target-port 5000 \
              --ingress external \
              --registry-server $ACR_SERVER \
              --registry-username ${{ secrets.ACR_USERNAME }} \
              --registry-password ${{ secrets.ACR_PASSWORD }} \
              $(echo $SET_SECRETS | sed 's/\([^ ]\+\)/--set-secrets \1/g') \
              $(echo $SET_ENVVARS | sed 's/\([^ ]\+\)/--set-env-vars \1/g')
          else
            echo "Updating existing container app..."
            az containerapp update \
              --name $AZURE_CONTAINERAPP_NAME \
              --resource-group $AZURE_RG \
              --image $ACR_IMAGE \
              $(echo $SET_SECRETS | sed 's/\([^ ]\+\)/--set-secrets \1/g') \
              $(echo $SET_ENVVARS | sed 's/\([^ ]\+\)/--set-env-vars \1/g')
          fi
